append = pack
label = tei-persee

# load some plugins to activate some statements
[use]
plugin = basics

# Toggle ezs traces (see server stderr log)
[debug]
ezs = false

[XMLParse]
separator = /tei:teiCorpus/tei:TEI

# Aplatit la structure pour avoir clé/valeur
[OBJFlatten]
safe = false

# Remplace $ par _
[exchange]
value = self().mapKeys((value, key) => key.replace(/\$/g, '_'))

# Reconstruit la structure
[OBJFlatten]
reverse = true
safe = false

# Réaplatit la struture, avec / comme séparateur
[OBJFlatten]
separator = /

# On ne garde que les champs qui nous intéressent
[replace]
path = title
value = get("tei_teiHeader/tei_fileDesc/tei_titleStmt/tei_title/_t")

path = date
value = get("tei_teiHeader/tei_fileDesc/tei_sourceDesc/tei_biblStruct/tei_monogr/tei_imprint/tei_date/_t")

path = article
value = get("tei_teiHeader/tei_fileDesc/tei_publicationStmt/tei_idno").map((o) => o._t).join(" ")

# tableau dans tableau
path = text
value = get("tei_text/tei_body/tei_div").map((div) => div.tei_p).filter(x => Array.isArray(x)).reduce((res, a) => [...res, ...a], []).map((o) => o._t).join(" ")

# tableau dans un tableau
path = text2
value = get("tei_text/tei_body/tei_div").map((div) => div.tei_p).map((o) => o._t).join(" ")

# pas de tableau, plusieurs valeurs
path = text3
value = get("tei_text/tei_body/tei_div/tei_p").map((o) => o._t).join(" ")

# pas de tableau, une seule valeur
path = text4
value = get("tei_text/tei_body/tei_div/tei_p/_t")

path = note
value = get("tei_text/tei_body/tei_note/tei_p").defaultTo([]).map((o) => o._t).join(" ")

# Ensures that each object contains an identification key (required by lodex)
[swing]
test = pick(['URI', 'uri']).pickBy(_.identity).isEmpty()
[swing/identify]

# Prevent keys from containing dot path notation (which is forbidden by nodejs mongoDB driver)
[OBJFlatten]
separator = fix('.')
reverse = true
safe = true

# Ensures that each object contains the same keys
[OBJStandardize]

# Uncomment to see each data sent to the database
#[debug]

# Add contextual metadata related to the import
[assign]
path = lodexStamp.importedDate
value = fix(new Date()).thru(d => d.toDateString())
path = lodexStamp.usedParser
value = env('parser')
path = lodexStamp.uploadedFilename
value = env('source')
path = uri
value = get('uri').trim()

