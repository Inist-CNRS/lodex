append = pack
label = rdf

# load some plugins to activate some statements
[use]
plugin = basics

# Toggle ezs traces (see server stderr log)
[debug]
ezs = false

[XMLParse]
separator = /RDF/*
separator = /rdf:RDF/*

# Ensures that each object contains an identification key (required by lodex)
[swing]
test = pick(['URI', 'uri']).pickBy(_.identity).isEmpty()
[swing/identify]

# Prevent keys from containing dot path notation (which is forbidden by nodejs mongoDB driver)
[OBJFlatten]
separator = fix('.')
reverse = true
safe = true

# Flated object structure for direct use in Lodex datagrid
[OBJFlatten]
separator = fix('/')
safe = false

#Â Prevents keys from containing the $ character (which is forbidden by nodejs mongoDB driver)
[exchange]
value = self().mapKeys((value, key) => key.replace(/\$/g, '_'))

# Ensures that each object contains the same keys
[OBJStandardize]

# Uncomment to see each data sent to the database
#[debug]

# Add contextual metadata related to the import
[assign]
path = lodexStamp.importedDate
value = fix(new Date()).thru(d => d.toDateString())
path = lodexStamp.usedParser
value = env('parser')
path = lodexStamp.uploadedFilename
value = env('source')
path = uri
value = get('uri').trim()

