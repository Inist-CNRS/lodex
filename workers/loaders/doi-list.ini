append = pack
label = doi-list
extension = txt
mimeType = application/json

# load some plugins to activate some statements
[use]
plugin = basics

# Choose en provider (unpaywall, crossref, hal, openalex)
[env]
path = provider
value = unpaywall

[TXTParse]
separator = fix('\n')

[replace]
path = id
value = self().trim()

path = value
value = self().trim()

[validate]
path = value
rule = required|string

[expand]
path = value
size = 100
cacheName = fix('doi-list-cache', env('provider', 'unpaywall')).join('').toString()
[expand/URLConnect]
url = fix('https://biblio-tools.services.istex.fr/v2/', env('provider', 'unpaywall'), '/works/expand').join('').toString()
timeout = 120000
noerror = false

[swing]
test = get('value').isEqual('n/a')
[swing/assign]
path = value
value = fix({})

[assign]
path = value.uri
value  = get('id')
[exchange]
value = get('value')

[OBJFlatten]

# Ensures that each object contains an identification key (required by lodex)
[swing]
test = pick(['URI', 'uri']).pickBy(_.identity).isEmpty()
[swing/identify]

# Ignore objects with duplicate URI
[dedupe]
ignore = true

# Prevent keys from containing dot path notation (which is forbidden by nodejs mongoDB driver)
[OBJFlatten]
separator = fix('.')
reverse = true
safe = true

# Uncomment to see each data sent to the database
#[debug]

# Add contextual metadata related to the import
[assign]
path = lodexStamp.importedDate
value = fix(new Date()).thru(d => d.toDateString())
path = lodexStamp.usedParser
value = env('parser')
path = lodexStamp.uploadedFilename
value = env('source')
path = uri
value = get('uri').trim()

