; Export with only some value (id, title, summary, etc.)
; Example call:
;   - /api/run/filter/aHOZ/Cancer magister (aHOZ being the field identifier of the main resource to compare)
;

prepend = delegate?file=../worker.ini
mimeType = application/json
label = Expose metadata like JSON Feed

[use]
plugin = basics
plugin = lodex
plugin = analytics

[buildContext]
connectionStringURI = get('connectionStringURI')

; Keep some env variable
[env]
path = minValue
value = env('minValue').parseInt().defaultTo(0)

path = maxValue
value = env('maxValue').parseInt().defaultTo(1000000)

path = maxSize
value = env('maxSize').parseInt().defaultTo(10)

path = reverse
value = env('orderBy').split('/').get(1).replace('asc', 0).replace('desc', 1).parseInt()

path = tuneBy
value = env('orderBy').split('/').get(0).replace('_id', 'id')

path = fields
value = get('fields')

path = field
value = get('field').castArray()

path = host
value = get('host')

path = sortOrder
value = env('sort').split('/').get(1)

path = sortOn
value = env('sort').split('/').get(0)

[assign]
path = ref_field.title
value = env('fields').find({'overview':1}).get('name')

path = ref_field.summary
value = env('fields').find({'overview':2}).get('name')

path = ref_field.detail1
value = env('fields').find({'overview':3}).get('name')

path = ref_field.detail2
value = env('fields').find({'overview':4}).get('name')

path = ref_field.detail3
value = env('fields').find({'overview':5}).get('name')

path = ref_field.date_published
value = publicationDate

path = sortOn
value = env('sortOn')

path = relation
value = env('field.0')

; Create mongodb filter (@TODO Change versions to a dynamic call when needed)
[assign]
path = fix(`filter['versions.0.${self.relation}']`)
value = env('field.1')

; Get filtered data
[LodexRunQuery]
sortOn = get(`ref_field.${self.sortOn}`)
sortOrder = env('sortOrder')

; Remove useless data
[filterVersions]
[filterContributions]

; find the fields which are selected for title and summary
[assign]
path = titleFieldName
value = env('fields').find({'overview':1}).get('name')

path = summaryFieldName
value = env('fields').find({'overview':2}).get('name')

path = detail1FieldName
value = env('fields').find({'overview':3}).get('name')

path = detail2FieldName
value = env('fields').find({'overview':4}).get('name')

path = detail3FieldName
value = env('fields').find({'overview':5}).get('name')

path = host
value = env('host')

[assign]
path = id
value = get('uri')

path = title
value = get(self.titleFieldName).toString()

path = summary
value = get(self.summaryFieldName).toString()

path = detail1
value = get(self.detail1FieldName).toString()

path = detail2
value = get(self.detail2FieldName).toString()

path = detail3
value = get(self.detail3FieldName).toString()

path = date_published
value = get('publicationDate')

path = url
value = pick(['host', 'uri']).values().join('/')

; Send only a part of the data
[slice]
start = 1
size = env('maxSize')

; Keep only the necessary data
[keep]
path = id
path = url
path = title
path = summary
path = detail1
path = detail2
path = detail3
path = date_published
path = total


; Create and structured output
[LodexOutput]
keyName = items
indent = true
extract = total
